version: '3.8'

services:
  user-service:
    build:
      context: ./UserService
    container_name: user-service
    ports:
      - "8000:8000"                # Expose UserService on localhost:8000
    env_file:
      - ./UserService/.env
    volumes:
      - ./UserService/dbdata:/app/dbdata
    restart: unless-stopped
    depends_on:
      - message-broker-service

  course-service:
    build:
      context: ./CourseService
    container_name: course-service
    ports:
      - "8001:8000"                # Expose CourseService on localhost:8001 (container listens on 8000)
    env_file:
      - ./CourseService/.env
    volumes:
      - ./CourseService/dbdata:/app/dbdata
    restart: unless-stopped
    depends_on:
      - message-broker-service

  message-broker-service:
    build:
      context: ./MessageBrokerService
    container_name: message-broker-service
    ports:
      - "8002:8000"                # Broker accessible at localhost:8002
    env_file:
      - ./MessageBrokerService/.env
    volumes:
      - ./MessageBrokerService/dbdata:/app/dbdata
    depends_on:
      - rabbitmq
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"               # For internal broker connections
      - "15672:15672"             # For RabbitMQ web UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped

  api-gateway:
    build:
      context: ./ApiGateway
    container_name: api-gateway
    ports:
      - "80:80"
    depends_on:
      - user-service
      - course-service
      - message-broker-service
    restart: unless-stopped
